{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Admin/add/add.component.css","webpack:///./src/app/Admin/add/add.component.html","webpack:///./src/app/Admin/add/add.component.ts","webpack:///./src/app/Admin/customers/customers.component.css","webpack:///./src/app/Admin/customers/customers.component.html","webpack:///./src/app/Admin/customers/customers.component.ts","webpack:///./src/app/Admin/login/login.component.css","webpack:///./src/app/Admin/login/login.component.html","webpack:///./src/app/Admin/login/login.component.ts","webpack:///./src/app/Admin/main-admin/main-admin.component.css","webpack:///./src/app/Admin/main-admin/main-admin.component.html","webpack:///./src/app/Admin/main-admin/main-admin.component.ts","webpack:///./src/app/Admin/update/update.component.css","webpack:///./src/app/Admin/update/update.component.html","webpack:///./src/app/Admin/update/update.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer/reserve/reserve.component.css","webpack:///./src/app/customer/reserve/reserve.component.html","webpack:///./src/app/customer/reserve/reserve.component.ts","webpack:///./src/app/customer/videoslist/videoslist.component.css","webpack:///./src/app/customer/videoslist/videoslist.component.html","webpack:///./src/app/customer/videoslist/videoslist.component.ts","webpack:///./src/app/filter.pipe.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/get.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/videos.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"img{\\n  width: 150px;\\n  height: 100px;\\n  border:2px solid black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQWRtaW4vYWRkL2FkZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGNBQWM7RUFDZCx1QkFBdUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9BZG1pbi9hZGQvYWRkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWd7XG4gIHdpZHRoOiAxNTBweDtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgYm9yZGVyOjJweCBzb2xpZCBibGFjaztcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"container col-lg-5 mt-5 mb-5 p-5 bg-light\\\">\\n<div class=\\\"text-center\\\">\\n<h2 class=\\\"text-dark mb-5\\\">Add a new Video</h2>\\n\\n</div>\\n   <form (ngSubmit)=\\\"onSubmit(title,rTime,genre,ratings,director,status)\\\"  #addForm=\\\"ngForm\\\" class=\\\"form-signin\\\">\\n   <table class=\\\"table\\\">\\n      <tr>\\n         <td>Title:</td>\\n         <td>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" required ngModel #title=\\\"ngModel\\\" name=\\\"title\\\">\\n            <div [hidden]=\\\"title.valid || title.pristine\\\" class=\\\"alert alert-danger\\\">\\n               Title is required\\n            </div>\\n         </td>\\n      </tr>\\n      <tr>\\n         <td>Runnig Time</td>\\n         <td><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" ngModel #rTime name=\\\"runningTime\\\"></td>\\n      </tr>\\n      <tr>\\n         <td>Genre</td>\\n         <td>\\n            <div class=\\\"form-group\\\">\\n               <select class=\\\"form-control\\\" id=\\\"genre\\\" required ngModel name=\\\"genre\\\" #genre=\\\"ngModel\\\">\\n                  <option value=\\\"\\\" selected disabled hidden>Select a Genre</option>\\n                  <option *ngFor=\\\"let genre of videos.genre\\\" [value]=\\\"genre\\\">{{genre}}</option>\\n               </select>\\n            </div>\\n         <td>\\n      </tr>\\n      <tr>\\n         <td>Ratings</td>\\n         <td>\\n            <!-- Dropdown list -->\\n            <div class=\\\"form-group\\\">\\n               <select class=\\\"form-control\\\" id=\\\"rating\\\" required ngModel name=\\\"rating\\\" #ratings=\\\"ngModel\\\">\\n                  <option value=\\\"\\\" selected disabled hidden>Select a rating</option>\\n                  <option *ngFor=\\\"let rating of videos.rating\\\" [value]=\\\"rating\\\">{{rating}}</option>\\n               </select>\\n            </div>\\n         <td>\\n      </tr>\\n      <tr>\\n         <td>Director</td>\\n         <td> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" required ngModel #director name=\\\"director\\\"> </td>\\n      </tr>\\n      <tr>\\n         <td>Status</td>\\n         <td>\\n            <div class=\\\"form-group\\\">\\n               <select class=\\\"form-control\\\" id=\\\"status\\\" required ngModel name=\\\"status\\\" #status=\\\"ngModel\\\">\\n               <option value=\\\"\\\" selected disabled hidden>Select a Status</option>\\n               <option *ngFor=\\\"let status of videos.status\\\" [value]=\\\"status\\\">{{status}}</option>\\n               </select>\\n            </div>\\n         <td>\\n      </tr>\\n      <tr>\\n         <td>Upload Image</td>\\n         <td>\\n           <input type=\\\"file\\\"  (change)=\\\"onFileSelected($event)\\\" value=\\\"Basic file Upload\\\">\\n  <td>\\n          <td *ngIf=\\\"!img2;else other_content\\\"><img src=\\\"{{path}}default.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\"></td>\\n      </tr>\\n\\n      <tr>\\n         <td><button [routerLink]=\\\"['/mainAdmin']\\\" class=\\\"btn btn-lg btn-danger btn-block\\\" type=\\\"submit\\\">Back</button></td>\\n         <td><button  class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!addForm.form.valid\\\">Add</button></td>\\n      </tr>\\n   </table>\\n   </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Video } from '../../videos';\nimport { GetService } from '../../get.service';\nimport {Router} from '@angular/router';\nimport {SessionStorageService} from 'angular-web-storage';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  videos = new Video();\n  videosData: any;\n  img: File;\n  img2: any;\n  path= \"../../../assets/\";\n\n  constructor(private getService: GetService,private router:Router,private session:SessionStorageService,private http: HttpClient) { }\n\n  onSubmit(title, rTime, genre, ratings, director, status) {\n\n    if( this.img == null) {\n      this.img2 = \"default.jpg\";\n      //assigned values to be updated\n      this.videosData = {title:title.value,rTime: rTime.value,genre:genre.value,ratings:ratings.value,director:director.value,status:status.value,image:this.img2}\n       // update video\n       this.getService.addVideo(this.videosData).subscribe(data=>{\n        data =this.videosData;\n      window.alert(\"Video Added!\");\n         this.router.navigate(['mainAdmin']);});\n\n      }else{\n      const fd = new FormData();\n      fd.append('image',this.img ,this.img.name);\n      this.img2 = this.img.name\n       //assigned values to be updated\n       this.videosData = {title:title.value,rTime: rTime.value,genre:genre.value,ratings:ratings.value,director:director.value,status:status.value,image:this.img2}\n       // update video\n       this.getService.addVideo(this.videosData).subscribe(data=>{\n        data =this.videosData;\n      window.alert(\"Video Updated!\");\n\n         this.router.navigate(['mainAdmin']);});\n      this.getService.addImage(fd).subscribe( data=>{return false;});\n\n    }\n\n  }\n\n  onFileSelected(event){\n    this.img = <File>event.target.files[0];\n    if( this.img == null) {this.img2 = \"default.jpg\";}else{this.img2 = this.img.name}\n    const fd = new FormData();\n    fd.append('image',this.img ,this.img.name);\n    console.log(this.img2);\n  }\n\n  ngOnInit() {\n     //session handle\n    if( this.img == null) {this.img2=\"default.jpg\";}else{this.img2 = this.img.name}\n    if(!this.session.get('logged'))this.router.navigate(['/login'],{queryParams: {'authentication': 'Faliure'}});\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0FkbWluL2N1c3RvbWVycy9jdXN0b21lcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"col-sm\\\">\\n   <div class=\\\"container\\\">\\n      <br />\\n      <div class=\\\"row justify-content-center\\\">\\n         <div class=\\\"col-12 col-md-10 col-lg-8\\\">\\n            <form class=\\\"card card-sm\\\">\\n               <div class=\\\"card-body row no-gutters align-items-center\\\">\\n                  <div class=\\\"col-auto\\\">\\n                     <i class=\\\"fas fa-search h4 text-body\\\"></i>\\n                  </div>\\n                  <div class=\\\"col\\\">\\n                     <form id=\\\"filter\\\">\\n                            <input [(ngModel)]=\\\"filterargs\\\" name=\\\"filter\\\" class=\\\"form-control form-control-lg form-control-borderless\\\" type=\\\"search\\\"\\n                                placeholder=\\\"Search Customers\\\">\\n                        </form>\\n                  </div>\\n\\n               </div>\\n            </form>\\n         </div>\\n         <div class=\\\"container mt-5\\\">\\n            <div class=\\\"row\\\">\\n               <div class=\\\"col\\\">\\n                  <ul class=\\\"nav nav-pills nav-fill\\\">\\n                     <li class=\\\"nav-item\\\">\\n                        <a [routerLink]=\\\"['/mainAdmin']\\\" class=\\\"nav-link border border-primary\\\" href=\\\"#\\\">Videos</a>\\n                     </li>\\n                  </ul>\\n               </div>\\n               <div class=\\\"col\\\">\\n                  <ul class=\\\"nav nav-pills nav-fill\\\">\\n                     <li class=\\\"nav-item\\\">\\n                        <a  [routerLink]=\\\"['/customers']\\\" class=\\\"nav-link  active\\\" >Customers</a>\\n                     </li>\\n                  </ul>\\n               </div>\\n            </div>\\n         </div>\\n      </div>\\n   </div>\\n</div>\\n<div class=\\\"col-lg p-5\\\">\\n   <table class=\\\"table\\\">\\n      <thead class=\\\"thead-dark\\\">\\n         <tr>\\n            <th scope=\\\"col\\\">First Name</th>\\n            <th scope=\\\"col\\\">Last Name</th>\\n            <th scope=\\\"col\\\">Address</th>\\n            <th scope=\\\"col\\\">City</th>\\n            <th scope=\\\"col\\\">Phone Number</th>\\n            <th scope=\\\"col\\\">Status</th>\\n         </tr>\\n      </thead>\\n      <tbody>\\n         <tr *ngFor=\\\"let data of customers | filter : filterargs\\\">\\n            <td>{{data.firstName}}</td>\\n            <td>{{data.lastName}}</td>\\n            <td>{{data.address}}</td>\\n            <td>{{data.city}}</td>\\n            <td>{{data.phoneNumber}}</td>\\n            <td>{{data.status}}</td>\\n         </tr>\\n      </tbody>\\n   </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GetService} from '../../get.service';\nimport {Router} from '@angular/router';\nimport {SessionStorageService} from 'angular-web-storage';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  customers: any = [];\n\n  constructor(private getService: GetService,private session:SessionStorageService,private router:Router) {\n  }\n  ngOnInit() {\n\n    if(this.session.get('logged')){\n\n      //get all customers\n      this.getService.getAllCustomers().subscribe(gets => {this.customers = gets;});\n\n    }else{\n      //bad session handle\n      this.router.navigate(['/login'],{queryParams: {'authentication': 'Faliure'}});\n  }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0FkbWluL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container col-sm-4 mt-5 p-5 \\\">\\n   <div [hidden]=\\\"!submitted\\\" class=\\\"col text-center\\\">\\n      <h4 class=\\\"text-danger m-3\\\"> Username/Password was incorrect. Please try again!</h4>\\n   </div>\\n     <div [hidden]=\\\"this.message !='Faliure'\\\" class=\\\"col text-center\\\">\\n      <h4 class=\\\"text-danger m-3\\\"> Access denied!. Please Login</h4>\\n   </div>\\n   <form (ngSubmit)=\\\"onSubmit(userName,password)\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-signin\\\">\\n   <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\n   <label >Email address</label>\\n   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userName\\\" required [ngModel]=\\\"username\\\" #userName=\\\"ngModel\\\" name=\\\"name\\\" placeholder=\\\"Enter your user name\\\">\\n   <div [hidden]=\\\"userName.valid || userName.pristine\\\" class=\\\"alert alert-danger\\\">\\n      User name is required\\n   </div>\\n   <label>Password</label>\\n   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\" required [ngModel]=\\\"passwd\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" placeholder=\\\"Enter your password\\\" type=\\\"password\\\">\\n   <div [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"alert alert-danger\\\">\\n      Password is required\\n   </div>\\n   <div class=\\\"checkbox\\\">\\n      <label>\\n      <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n      </label>\\n   </div>\\n   <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" >Sign in</button>\\n   </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {SessionStorageService} from 'angular-web-storage';\nimport { GetService } from '../../get.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\nadminData :any[];\n\n  submitted =false;\n  redirect = 0;\n  message:any;\n\n  constructor(private router:Router,private session:SessionStorageService,private getService: GetService,private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n      this.getService.getAdmin().subscribe(data=>{\n        this.adminData =data;\n      })\n       //get url parameters\n      this._route.queryParams.subscribe(params => {this.message =params['authentication'];});\n  }\n\n  onSubmit(username,password){\n\n    for (var i = 0; i < this.adminData.length; i++) {\n      if( username.value == this.adminData[i].email && password.value == this.adminData[i].password  ){\n        this.session.set('logged',true,0);\n        this.router.navigate(['/mainAdmin'],{queryParams: {'authentication': 'Sucessful'}});\n      }\n      else{\n        this.submitted=true;\n      }\n    }\n  }\n\n\n\n}\n","module.exports = \"img{\\n  width: 150px;\\n  height: 100px;\\n  border:2px solid black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQWRtaW4vbWFpbi1hZG1pbi9tYWluLWFkbWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsY0FBYztFQUNkLHVCQUF1QjtDQUN4QiIsImZpbGUiOiJzcmMvYXBwL0FkbWluL21haW4tYWRtaW4vbWFpbi1hZG1pbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1ne1xuICB3aWR0aDogMTUwcHg7XG4gIGhlaWdodDogMTAwcHg7XG4gIGJvcmRlcjoycHggc29saWQgYmxhY2s7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"col-sm\\\">\\n   <div class=\\\"container\\\">\\n      <br />\\n      <div class=\\\"row justify-content-center\\\">\\n         <div class=\\\"col-12 col-md-10 col-lg-8\\\">\\n            <form class=\\\"card card-sm\\\">\\n               <div class=\\\"card-body row no-gutters align-items-center\\\">\\n                  <div class=\\\"col-auto\\\">\\n                     <i class=\\\"fas fa-search h4 text-body\\\"></i>\\n                  </div>\\n\\n                  <div class=\\\"col\\\">\\n                      <form id=\\\"filter\\\">\\n                            <input [(ngModel)]=\\\"filterargs\\\" name=\\\"filter\\\" class=\\\"form-control form-control-lg form-control-borderless\\\" type=\\\"search\\\"\\n                                placeholder=\\\"Search movies\\\">\\n                        </form>\\n                  </div>\\n\\n               </div>\\n            </form>\\n         </div>\\n\\n      </div>\\n   </div>\\n</div>\\n<div class=\\\"container mt-5\\\">\\n   <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n         <ul class=\\\"nav nav-pills nav-fill\\\">\\n            <li class=\\\"nav-item\\\">\\n               <a [routerLink]=\\\"['/mainAdmin']\\\" class=\\\"nav-link active\\\" href=\\\"#\\\">Videos</a>\\n            </li>\\n         </ul>\\n      </div>\\n      <div class=\\\"col\\\">\\n         <ul class=\\\"nav nav-pills nav-fill\\\">\\n            <li class=\\\"nav-item\\\">\\n               <a  [routerLink]=\\\"['/customers']\\\" class=\\\"nav-link border border-primary\\\" >Customers</a>\\n            </li>\\n         </ul>\\n      </div>\\n   </div>\\n</div>\\n<div class=\\\"container \\\">\\n   <div class=\\\"row\\\">\\n      <div class=\\\"col text-center\\\">\\n         <button [routerLink]=\\\"['/add']\\\" class=\\\"btn btn-md btn-danger m-3\\\" type=\\\"submit\\\">Add new Video</button>\\n      </div>\\n   </div>\\n</div>\\n\\n\\n<div class= \\\"row\\\">\\n<div class=\\\"col-lg p-5\\\">\\n   <table class=\\\"table\\\">\\n      <thead class=\\\"thead-dark\\\">\\n         <tr>\\n            <th scope=\\\"col\\\">Title</th>\\n            <th scope=\\\"col\\\">Running Time</th>\\n            <th scope=\\\"col\\\">Genre</th>\\n            <th scope=\\\"col\\\">Ratings</th>\\n            <th scope=\\\"col\\\">Director</th>\\n            <th scope=\\\"col\\\">Image</th>\\n            <th scope=\\\"col\\\">Status</th>\\n            <th scope=\\\"col\\\"></th>\\n         </tr>\\n      </thead>\\n      <tbody>\\n         <tr *ngFor=\\\"let data of videos | filter : filterargs\\\">\\n            <td>{{data.title}}</td>\\n            <td>{{data.rTime}}</td>\\n            <td>{{data.genre}}</td>\\n            <td>{{data.ratings}}</td>\\n            <td>{{data.director}}</td>\\n                <td>\\n                    <img src=\\\"{{path}}{{data.image}}\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n                </td>\\n            <td>{{data.status}}</td>\\n\\n               <td >\\n                  <button (click)=\\\"btnUpdate(data._id)\\\" class=\\\"btn btn-md btn-primary mr-1\\\" type=\\\"submit\\\">Update</button>\\n                  <button  (click)=\\\"btnDelete(data._id)\\\" class=\\\"btn btn-md btn-primary\\\" type=\\\"submit\\\">Delete</button>\\n               </td>\\n\\n         </tr>\\n      </tbody>\\n   </table>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GetService } from '../../get.service';\nimport {Router} from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport {SessionStorageService} from 'angular-web-storage';\n\n\n@Component({\n  selector: 'app-main-admin',\n  templateUrl: './main-admin.component.html',\n  styleUrls: ['./main-admin.component.css'],\n})\n\nexport class MainAdminComponent implements OnInit {\n\n  videos: any = [];\n  path =\"../../../assets/\" ;\n  message:any;\n\n  constructor(private getService: GetService,private router:Router,private _route: ActivatedRoute,private session:SessionStorageService) { }\n\n  ngOnInit() {\n\n\n\n\n    if(this.session.get('logged')){\n\n    //get url parameters\n    this._route.queryParams.subscribe(params => {this.message =params['authentication'];if(this.message == \"Sucessful\")window.location.reload();this.router.navigate(['/mainAdmin'])});\n\n\n    //get all videos from DB\n    this.getService.getAllVideos().subscribe(videosList => {\n      this.videos = videosList;\n        });\n\n    //bad session handle\n    }else{ this.router.navigate(['/login'],{queryParams: {'authentication': 'Faliure'}}); }\n  }\n\n  //btn Update function\n  btnUpdate(id){\n    this.router.navigate(['/update'],{queryParams: {'id': id}});\n   }\n\n  //btn delete function\n  btnDelete(id){\n    this.getService.delete(id).subscribe(video =>{\n      this.videos.splice(id,1);\n      this.router.navigate(['mainAdmin']);\n      });\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0FkbWluL3VwZGF0ZS91cGRhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container col-lg-5 mt-5 mb-5 p-5 bg-light\\\">\\n<div class=\\\"text-center\\\">\\n<h2 class=\\\"text-dark mb-5\\\">Update a Video</h2>\\n\\n</div>\\n   <form (ngSubmit)=\\\"onSubmit(title,rTime,genre,ratings,director,status)\\\"  #updateForm=\\\"ngForm\\\" class=\\\"form-signin\\\">\\n   <table class=\\\"table\\\">\\n      <tr>\\n         <td>Title:</td>\\n         <td>  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" required ngModel=\\\"{{videosData.title}}\\\" name=\\\"title\\\" #title=\\\"ngModel\\\"> </td>\\n      </tr>\\n      <tr>\\n         <td>Runnig Time</td>\\n         <td><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rTime\\\" required ngModel=\\\"{{videosData.rTime}}\\\" name=\\\"rTime\\\" #rTime=\\\"ngModel\\\"></td>\\n      </tr>\\n      <tr>\\n         <td>Genre</td>\\n         <td>\\n            <div class=\\\"form-group\\\">\\n               <select class=\\\"form-control\\\" id=\\\"genre\\\" required ngModel name=\\\"genre\\\" #genre=\\\"ngModel\\\">\\n                  <option value=\\\"\\\" selected disabled hidden>Select a Genre</option>\\n                  <option *ngFor=\\\"let genre of videos.genre\\\" [value]=\\\"genre\\\">{{genre}}</option>\\n               </select>\\n            </div>\\n         <td>\\n      </tr>\\n      <tr>\\n         <td>Ratings</td>\\n         <td>\\n            <div class=\\\"form-group\\\">\\n               <select class=\\\"form-control\\\" id=\\\"rating\\\" required ngModel name=\\\"rating\\\" #ratings=\\\"ngModel\\\">\\n                  <option value=\\\"\\\" selected disabled hidden>Select a Rating</option>\\n                  <option *ngFor=\\\"let rating of videos.rating\\\" [value]=\\\"rating\\\">{{rating}}</option>\\n               </select>\\n            </div>\\n         <td>\\n      </tr>\\n      <tr>\\n         <td>Director</td>\\n         <td><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"director\\\" required ngModel=\\\"{{videosData.director}}\\\" name=\\\"director\\\" #director=\\\"ngModel\\\"> </td>\\n      </tr>\\n      <tr>\\n         <td>Status</td>\\n         <td>\\n            <div class=\\\"form-group\\\">\\n               <select class=\\\"form-control\\\" id=\\\"status\\\" required ngModel name=\\\"status\\\" #status=\\\"ngModel\\\">\\n                  <option value=\\\"\\\" selected disabled hidden>Select a Status</option>\\n                  <option *ngFor=\\\"let status of videos.status\\\" [value]=\\\"status\\\">{{status}}</option>\\n               </select>\\n            </div>\\n         <td>\\n      </tr>\\n    <tr>\\n       <td>Upload Image</td>\\n         <td>\\n           <input type=\\\"file\\\"  (change)=\\\"onFileSelected($event)\\\" value=\\\"Basic file Upload\\\">\\n        <td>\\n          <td *ngIf=\\\"!img2;else other_content\\\"><img src=\\\"{{path}}default.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\"></td>\\n\\n          <ng-template #other_content><td><img src=\\\"{{path}}{{img2}}\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\"></td></ng-template>\\n      </tr>\\n      <tr>\\n         <td><button [routerLink]=\\\"['/mainAdmin']\\\" class=\\\"btn btn-lg btn-danger btn-block\\\" type=\\\"submit\\\">Back</button></td>\\n         <td><button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Update</button></td>\\n      </tr>\\n   </table>\\n   </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Video } from '../../videos';\nimport { GetService } from '../../get.service';\nimport {Router} from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport {SessionStorageService} from 'angular-web-storage';\n\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n\n  imageSrc:any;\n  videos =new Video();\n  id: any;\n  videosData = {title:\"\",rTime: \"\", genre: \"\", ratings: \"\" , director: \"\",status:\"\", image:\"\" };\n  path =\"../../../assets/\" ;\n  img: File;\n  img2: any;\n\n  constructor(private getService: GetService,private router:Router,private _route: ActivatedRoute,private session:SessionStorageService) { }\n\n  onSubmit(title, rTime, genre, ratings, director, status) {\n\n    if( this.img == null) {\n      this.img2 = \"default.jpg\";\n      //assigned values to be updated\n      this.videosData = {title:title.value,rTime: rTime.value,genre:genre.value,ratings:ratings.value,director:director.value,status:status.value,image:this.img2}\n      // update video\n      this.getService.updateVideo(this.videosData,this.id).subscribe(data=>{\n        data =this.videosData;\n        window.alert(\"Video Updated!\");\n\n        this.router.navigate(['mainAdmin']);\n       });\n\n      }else{\n      const fd = new FormData();\n      fd.append('image',this.img ,this.img.name);\n      this.img2 = this.img.name\n       //assigned values to be updated\n       this.videosData = {title:title.value,rTime: rTime.value,genre:genre.value,ratings:ratings.value,director:director.value,status:status.value,image:this.img2}\n       // update video\n       this.getService.updateVideo(this.videosData,this.id).subscribe(data=>{\n         data =this.videosData;\n         window.alert(\"Video Updated!\");\n\n         this.router.navigate(['mainAdmin']);\n        });\n      this.getService.addImage(fd).subscribe( data=>{return false;});\n\n    }\n\n\n\n  }\n\n  ngOnInit() {\n\n    if(this.session.get('logged')){\n      //get video id parameter\n      this._route.queryParams.subscribe(params => {this.id =params.id;});\n\n      // get video on db by id\n      if(this.id !=null){\n        this.getService.getOne(this.id).subscribe(video => {\n          this.videosData = video;\n          this.imageSrc = video.image.originalname;});\n\n      }else{\n        this.router.navigate(['mainAdmin']);\n      }\n\n    }else{\n       //bad session handle\n      this.router.navigate(['/login'],{queryParams: {'authentication': 'Faliure'}});\n  }\n\n\n\n  }\n\n  onFileSelected(event){\n    this.img = <File>event.target.files[0];\n    if( this.img == null) {this.img2 = \"default.jpg\";}else{this.img2 = this.img.name}\n    const fd = new FormData();\n    fd.append('image',this.img ,this.img.name);\n\n    console.log(this.img);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'VideoStore-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './Admin/login/login.component';\nimport { FooterComponent } from './footer/footer.component';\nimport {RouterModule, Routes, Router} from '@angular/router';\nimport { VideoslistComponent } from './customer/videoslist/videoslist.component';\nimport { ReserveComponent } from './customer/reserve/reserve.component';\nimport { FormsModule } from '@angular/forms';\nimport { MainAdminComponent } from './Admin/main-admin/main-admin.component';\nimport { UpdateComponent } from './Admin/update/update.component';\nimport { AddComponent } from './Admin/add/add.component';\nimport { CustomersComponent } from './Admin/customers/customers.component';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GetService } from './get.service';\nimport { FilterPipe} from './filter.pipe';\n\n\nconst appRoutes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n  path: '',\n  component: VideoslistComponent\n  },\n  {\n    path: 'reserve',\n    component: ReserveComponent\n  },\n  {\n    path: 'mainAdmin',\n    component: MainAdminComponent\n  },\n  {\n    path: 'add',\n    component: AddComponent\n  },\n  {\n    path: 'update',\n    component: UpdateComponent\n  },\n  {\n    path: 'customers',\n    component: CustomersComponent\n  }\n\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    FooterComponent,\n    VideoslistComponent,\n    ReserveComponent,\n    MainAdminComponent,\n    UpdateComponent,\n    AddComponent,\n    CustomersComponent,\n    FilterPipe\n\n  ],\n\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    AppRoutingModule,\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule\n\n  ],\n  providers: [GetService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","module.exports = \"img{\\n  width: 650px;\\n  height: 300px;\\n  border:2px solid black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXIvcmVzZXJ2ZS9yZXNlcnZlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsY0FBYztFQUNkLHVCQUF1QjtDQUN4QiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL3Jlc2VydmUvcmVzZXJ2ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1ne1xuICB3aWR0aDogNjUwcHg7XG4gIGhlaWdodDogMzAwcHg7XG4gIGJvcmRlcjoycHggc29saWQgYmxhY2s7XG59XG4iXX0= */\"","module.exports = \"\\n<div *ngFor=\\\"let data of videosData\\\" class=\\\"container col-lg-6 mt-5 p-5\\\">\\n\\n<img src=\\\"{{path}}{{data.image}}\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n\\n        <table class=\\\"table\\\">\\n            <tr>\\n                <td>Title:</td>\\n                <td>{{data.title}}</td>\\n            </tr>\\n            <tr>\\n                <td>Runnig Time</td>\\n                <td>{{data.rTime}}</td>\\n            </tr>\\n            <tr>\\n                <td>Genre</td>\\n                <td>{{data.genre}}</td>\\n            </tr>\\n            <tr>\\n                <td>Rating</td>\\n                <td>{{data.ratings}}</td>\\n            </tr>\\n            <tr>\\n                <td>Director</td>\\n                <td>{{data.director}}</td>\\n            </tr>\\n            <tr>\\n                <td>Customer</td>\\n                <td>\\n                 <div class=\\\"form-group\\\">\\n               <select class=\\\"form-control\\\" id=\\\"genre\\\" required ngModel name=\\\"genre\\\" #genre=\\\"ngModel\\\">\\n                  <option value=\\\"\\\" selected disabled hidden>Select a Customer</option>\\n                  <option required *ngFor=\\\"let data of customers\\\" [value]=\\\"data\\\">{{data.firstName}}</option>\\n               </select>\\n               </div>\\n                </td>\\n            </tr>\\n            <tr>\\n                    <td><button [routerLink]=\\\"['']\\\" class=\\\"btn btn-lg btn-danger btn-block\\\" type=\\\"submit\\\">Back</button></td>\\n                    <td><button (click)=\\\"updateVideo(data._id)\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Reserve</button></td>\\n                </tr>\\n        </table>\\n\\n</div> <!-- /container -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { GetService } from '../../get.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-reserve',\n  templateUrl: './reserve.component.html',\n  styleUrls: ['./reserve.component.css']\n})\nexport class ReserveComponent implements OnInit {\n\n  id: any;\n  videosData: any;\n  customers: any = [];\n  status = {status:\"unavaliable\"};\n  path =\"../../../assets/\" ;\n\n  constructor(private getService: GetService,private router:Router,private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this._route.queryParams.subscribe(params => {this.id =params.id;});\n\n    // get video on db by id\n    if(this.id !=null){\n      this.getService.getOne(this.id).subscribe(videosList => {this.videosData = [videosList]; });\n    }else{\n      this.router.navigate(['mainAdmin']);\n    }\n    //get all customers\n    this.getService.getAllCustomers().subscribe(gets => {this.customers = gets;});\n  }\n\n  updateVideo(id){\n    //update video status field on db\n    this.getService.updateFieldVideo(this.status,this.id).subscribe( data=>{\n    data = this.videosData;\n    this.router.navigate(['']);\n    });\n\n\n  }\n\n}\n","module.exports = \"img{\\n  width: 150px;\\n  height: 100px;\\n  border:2px solid black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXIvdmlkZW9zbGlzdC92aWRlb3NsaXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsY0FBYztFQUNkLHVCQUF1QjtDQUN4QiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL3ZpZGVvc2xpc3QvdmlkZW9zbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1ne1xuICB3aWR0aDogMTUwcHg7XG4gIGhlaWdodDogMTAwcHg7XG4gIGJvcmRlcjoycHggc29saWQgYmxhY2s7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"col-sm\\\">\\n    <div class=\\\"container\\\">\\n        <br />\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-12 col-md-10 col-lg-8\\\">\\n                <form class=\\\"card card-sm\\\">\\n                    <div class=\\\"card-body row no-gutters align-items-center\\\">\\n                        <div class=\\\"col-auto\\\">\\n                            <i class=\\\"fas fa-search h4 text-body\\\"></i>\\n                        </div>\\n                        <!--end of col-->\\n                        <div class=\\\"col\\\">\\n                        <form id=\\\"filter\\\">\\n                            <input [(ngModel)]=\\\"filterargs\\\" name=\\\"filter\\\" class=\\\"form-control form-control-lg form-control-borderless\\\" type=\\\"search\\\"\\n                                placeholder=\\\"Search movies\\\">\\n                        </form>\\n                        </div>\\n                        <!--end of col-->\\n                    </div>\\n                </form>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"col-lg p-5\\\">\\n    <table class=\\\"table\\\">\\n        <thead class=\\\"thead-dark\\\">\\n            <tr>\\n                <th scope=\\\"col\\\">Title</th>\\n                <th scope=\\\"col\\\">Running Time</th>\\n                <th scope=\\\"col\\\">Genre</th>\\n                <th scope=\\\"col\\\">Ratings</th>\\n                <th scope=\\\"col\\\">Director</th>\\n                <th scope=\\\"col\\\">Image</th>\\n                <th scope=\\\"col\\\">Status</th>\\n                <th scope=\\\"col\\\"></th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr>\\n               <tr *ngFor=\\\"let data of videos | filter : filterargs\\\">\\n                <td>{{data.title}}</td>\\n                <td>{{data.rTime}}</td>\\n                <td>{{data.genre}}</td>\\n                <td>{{data.ratings}}</td>\\n                <td>{{data.director}}</td>\\n                 <td>\\n                    <img src=\\\"{{path}}{{data.image}}\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n                </td>\\n                <td>{{data.status}}</td>\\n\\n                 <td *ngIf=\\\"data.status =='avaliable'\\\"> <button (click)=\\\"btnReserve(data._id)\\\" class=\\\"btn btn-md btn-primary\\\" type=\\\"submit\\\">Reserve</button></td>\\n            </tr>\\n\\n\\n        </tbody>\\n    </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GetService } from '../../get.service';\nimport {Router} from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-videoslist',\n  templateUrl: './videoslist.component.html',\n  styleUrls: ['./videoslist.component.css'],\n\n})\nexport class VideoslistComponent implements OnInit {\n\n\n  private videos: any = [];\n  path =\"../../../assets/\" ;\n\n  constructor(private getService: GetService,private router:Router,private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    //get all videos\n    this.getService.getAllVideos().subscribe(videosList => {this.videos = videosList;});\n\n  }\n\n  //btn reserve function\n  btnReserve(id) {\n    this.router.navigate(['/reserve'],{ queryParams: {'id': id}});\n }\n}\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n  name: 'filter',\n  pure: false\n})\n\nexport class FilterPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n\n    if(!value)return null;\n    if(!args)return value;\n\n    args = args.toLowerCase();\n\n    return value.filter(function(item){\n        return JSON.stringify(item).toLowerCase().includes(args);\n    });\n}\n}\n","module.exports = \"li { cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBQUssZ0JBQWdCLEVBQUUiLCJmaWxlIjoic3JjL2FwcC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsaSB7IGN1cnNvcjogcG9pbnRlcjsgfVxuIl19 */\"","module.exports = \"\\n<footer class=\\\"page-footer font-small bg-light \\\">\\n\\n    <div class=\\\"footer-copyright text-center py-3\\\">© 2018 Copyright:\\n      <a href=\\\"http://localhost:4200\\\"> Video Store</a>\\n    </div>\\n\\n  </footer>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, filter, catchError, mergeMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllVideos(): Observable<any> {\n    return this.http.get('http://localhost:3000/getVideos').pipe(map((gets) => {\n      return gets;\n    }));\n  }\n  getAllCustomers(): Observable<any> {\n    return this.http.get('http://localhost:3000/getCustomers').pipe(map((gets) => {\n      return gets;\n    }));\n  }\n\n  addVideo(videos): Observable<any> {\n    return this.http.post('http://localhost:3000/add',videos);\n  }\n\n  addImage(video):Observable<any>{\n    let header = new HttpHeaders();\n    header.append('Content-Type','multipart/form-data');\n    return this.http.put(`http://localhost:3000/image`,video);\n  }\n\n  updateVideo(video,videoId):Observable<any>{\n    return this.http.post(`http://localhost:3000/${videoId}`,video);\n  }\n\n  updateFieldVideo(video,videoId):Observable<any>{\n    return this.http.put(`http://localhost:3000/${videoId}`,video);\n  }\n\n  getOne(videoId): Observable<any> {\n    let header = new HttpHeaders();\n    header.append('Content-Type','application/json');\n    return this.http.get(`http://localhost:3000/get/${videoId}`).pipe(map(get =>{\n       get => get.json();\n       return get;\n    }));\n\n  }\n\n  delete(videoId): Observable<any>{\n    return this.http.delete(`http://localhost:3000/${videoId}`,videoId)\n  }\n\n  getAdmin(): Observable<any> {\n    return this.http.get('http://localhost:3000/getAdmin').pipe(map((gets) => {\n      return gets;\n    }));\n\n  }\n}\n","module.exports = \"li { cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBQUssZ0JBQWdCLEVBQUUiLCJmaWxlIjoic3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsaSB7IGN1cnNvcjogcG9pbnRlcjsgfVxuIl19 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n   <li [routerLink]=\\\"['']\\\" class=\\\"navbar-brand\\\" >Video Store</li>\\n   <li [routerLink]=\\\"['/mainAdmin']\\\" class=\\\"navbar-brand\\\" >Admin Space</li>\\n   <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n   <span class=\\\"navbar-toggler-icon\\\"></span>\\n   </button>\\n   <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n      </ul>\\n      <button *ngIf=\\\"logged == false \\\" [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\">Admin Login</button>\\n      <button *ngIf=\\\"logged == true \\\" (click)=\\\"onSubmit()\\\"  class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\">Logout</button>\\n   </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {SessionStorageService} from 'angular-web-storage';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  logged:any;\n  constructor(private router:Router,private session:SessionStorageService) { }\n\n  ngOnInit() {\n\n    // logout btn handle\n    if(this.session.get('logged') == true){\n      this.logged =true;\n    }else{\n      this.logged =false;\n    }\n  }\n\n  onSubmit(){\n    this.session.clear();\n    this.logged = false;\n    this.router.navigate(['']);\n  }\n}\n\n","export class Video{\n    private _genre = [\"Comedy\", \"SCI_FI\", \"Horor\", \"Romance\", \"Action\", \"Thriller\", \"Drama\", \"Mystery\", \"Crime\", \"Animation\", \"Adventure\", \"Fantasy\"];\n    private _rating = [\"1 star\",\"2 stars\",\"3 stars\",\"4 stars\",\"5 stars\"];\n    private _status = [\"avaliable\", \"unavaliable\"];\n\n    constructor (){\n    }\n\n    public get genre() {\n      return this._genre;\n    }\n    public set genre(value) {\n        this._genre = value;\n    }\n    public get rating() {\n      return this._rating;\n    }\n    public set rating(value) {\n        this._rating = value;\n    }\n    public get status() {\n      return this._status;\n    }\n    public set status(value) {\n      this._status = value;\n    }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}